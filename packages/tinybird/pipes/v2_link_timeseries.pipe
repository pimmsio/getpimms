DESCRIPTION >
	Timeseries data grouped by link_id for link insights table

TOKEN "v2_link_timeseries_endpoint_read_8676" READ

TAGS "Dub Endpoints"

NODE month_intervals
SQL >

    %
    WITH
        toStartOfMonth(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfMonth(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end,
    dateDiff('month', start, end) + 1 AS months_diff
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(start + toIntervalMonth(x), 3, {{ String(timezone, 'UTC') }}),
                range(0, months_diff)
            )
        ) as interval



NODE day_intervals
SQL >

    %
    WITH
        toStartOfDay(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfDay(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(toStartOfDay(toDateTime64(x, 3), {{ String(timezone, 'UTC') }}), 3),
                range(toUInt32(start), toUInt32(end + 86400), 86400)
            )
        ) as interval



NODE hour_intervals
SQL >

    %
    WITH
        toStartOfHour(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfHour(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(toStartOfHour(toDateTime64(x, 3), {{ String(timezone, 'UTC') }}), 3),
                range(toUInt32(start), toUInt32(end + 3600), 3600)
            )
        ) as interval



NODE minute_intervals
SQL >

    %
    WITH
        toStartOfMinute(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfMinute(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(toStartOfMinute(toDateTime64(x, 3), {{ String(timezone, 'UTC') }}), 3),
                range(toUInt32(start), toUInt32(end + 60), 60)
            )
        ) as interval



NODE workspace_links
SQL >

    %
    SELECT link_id
    from dub_links_metadata_latest FINAL
    WHERE
        workspace_id
        = {{
            String(
                workspaceId,
                'ws_clrei1gld0002vs9mzn93p8ik',
                description="The ID of the workspace",
                required=True,
            )
        }}
        {% if defined(tagIds) %}
            AND arrayExists(
                tag_id -> indexOf(splitByChar(',', {{ String(tagIds) }}), tag_id) > 0,
                tag_ids
            )
        {% end %}
        {% if defined(folderId) %} AND folder_id = {{ String(folderId) }} {% end %}
        {% if defined(partnerId) %} AND partner_id = {{ String(partnerId) }} {% end %}
        {% if defined(programId) %} AND program_id = {{ String(programId) }} {% end %}
        {% if defined(tenantId) %} AND tenant_id = {{ String(tenantId) }} {% end %}
        AND deleted = 0



NODE link_timeseries_clicks_data
SQL >

    %
    SELECT
        link_id,
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as clicks
    FROM
        dub_click_events_mv
        PREWHERE link_id in (SELECT link_id from workspace_links)
    WHERE
        true
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country IN splitByChar(',', {{ String(country) }}) {% end %}
        {% if defined(region) %} AND region = {{ region }} {% end %}
        {% if defined(city) %} AND city IN splitByChar(',', {{ String(city) }}) {% end %}
        {% if defined(device) %} AND device IN splitByChar(',', {{ String(device) }}) {% end %}
        {% if defined(browser) %} AND browser IN splitByChar(',', {{ String(browser) }}) {% end %}
        {% if defined(os) %} AND os IN splitByChar(',', {{ String(os) }}) {% end %}
        {% if defined(referer) %} AND referer IN splitByChar(',', {{ referer }}) {% end %}
        {% if defined(refererUrl) %} AND splitByString('?', referer_url)[1] = {{ refererUrl }} {% end %}
        {% if defined(utm_source) %} AND extractURLParameter(url, 'utm_source') IN splitByChar(',', {{ String(utm_source) }}) {% end %}
        {% if defined(utm_medium) %} AND extractURLParameter(url, 'utm_medium') IN splitByChar(',', {{ String(utm_medium) }}) {% end %}
        {% if defined(utm_campaign) %} AND extractURLParameter(url, 'utm_campaign') IN splitByChar(',', {{ String(utm_campaign) }}) {% end %}
        {% if defined(utm_term) %} AND extractURLParameter(url, 'utm_term') IN splitByChar(',', {{ String(utm_term) }}) {% end %}
        {% if defined(utm_content) %} AND extractURLParameter(url, 'utm_content') IN splitByChar(',', {{ String(utm_content) }}) {% end %}
        {% if defined(url) %} AND url IN splitByChar(',', {{ String(url) }}) {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY link_id, interval
    ORDER BY link_id, interval



NODE link_timeseries_leads_data
SQL >

    %
    SELECT
        link_id,
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as leads
    FROM
        dub_lead_events_mv
        PREWHERE link_id in (SELECT link_id from workspace_links)
    WHERE
        true
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country IN splitByChar(',', {{ String(country) }}) {% end %}
        {% if defined(region) %} AND region = {{ region }} {% end %}
        {% if defined(city) %} AND city IN splitByChar(',', {{ String(city) }}) {% end %}
        {% if defined(device) %} AND device IN splitByChar(',', {{ String(device) }}) {% end %}
        {% if defined(browser) %} AND browser IN splitByChar(',', {{ String(browser) }}) {% end %}
        {% if defined(os) %} AND os IN splitByChar(',', {{ String(os) }}) {% end %}
        {% if defined(referer) %} AND referer IN splitByChar(',', {{ referer }}) {% end %}
        {% if defined(refererUrl) %} AND splitByString('?', referer_url)[1] = {{ refererUrl }} {% end %}
        {% if defined(utm_source) %} AND extractURLParameter(url, 'utm_source') IN splitByChar(',', {{ String(utm_source) }}) {% end %}
        {% if defined(utm_medium) %} AND extractURLParameter(url, 'utm_medium') IN splitByChar(',', {{ String(utm_medium) }}) {% end %}
        {% if defined(utm_campaign) %} AND extractURLParameter(url, 'utm_campaign') IN splitByChar(',', {{ String(utm_campaign) }}) {% end %}
        {% if defined(utm_term) %} AND extractURLParameter(url, 'utm_term') IN splitByChar(',', {{ String(utm_term) }}) {% end %}
        {% if defined(utm_content) %} AND extractURLParameter(url, 'utm_content') IN splitByChar(',', {{ String(utm_content) }}) {% end %}
        {% if defined(url) %} AND url IN splitByChar(',', {{ String(url) }}) {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY link_id, interval
    ORDER BY link_id, interval



NODE link_timeseries_sales_data
SQL >

    %
    SELECT
        link_id,
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as sales,
        sum(amount) as saleAmount
    FROM
        dub_sale_events_mv
        PREWHERE link_id in (SELECT link_id from workspace_links)
    WHERE
        true
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country IN splitByChar(',', {{ String(country) }}) {% end %}
        {% if defined(region) %} AND region = {{ region }} {% end %}
        {% if defined(city) %} AND city IN splitByChar(',', {{ String(city) }}) {% end %}
        {% if defined(device) %} AND device IN splitByChar(',', {{ String(device) }}) {% end %}
        {% if defined(browser) %} AND browser IN splitByChar(',', {{ String(browser) }}) {% end %}
        {% if defined(os) %} AND os IN splitByChar(',', {{ String(os) }}) {% end %}
        {% if defined(referer) %} AND referer IN splitByChar(',', {{ referer }}) {% end %}
        {% if defined(refererUrl) %} AND splitByString('?', referer_url)[1] = {{ refererUrl }} {% end %}
        {% if defined(utm_source) %} AND extractURLParameter(url, 'utm_source') IN splitByChar(',', {{ String(utm_source) }}) {% end %}
        {% if defined(utm_medium) %} AND extractURLParameter(url, 'utm_medium') IN splitByChar(',', {{ String(utm_medium) }}) {% end %}
        {% if defined(utm_campaign) %} AND extractURLParameter(url, 'utm_campaign') IN splitByChar(',', {{ String(utm_campaign) }}) {% end %}
        {% if defined(utm_term) %} AND extractURLParameter(url, 'utm_term') IN splitByChar(',', {{ String(utm_term) }}) {% end %}
        {% if defined(utm_content) %} AND extractURLParameter(url, 'utm_content') IN splitByChar(',', {{ String(utm_content) }}) {% end %}
        {% if defined(url) %} AND url IN splitByChar(',', {{ String(url) }}) {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY link_id, interval
    ORDER BY link_id, interval



NODE link_timeseries_composite
SQL >

    %
    SELECT 
        COALESCE(clicks.link_id, leads.link_id, sales.link_id) as link_id,
        COALESCE(clicks.start, leads.start, sales.start) as start,
        COALESCE(clicks.clicks, 0) as clicks,
        COALESCE(leads.leads, 0) as leads,
        COALESCE(sales.sales, 0) as sales,
        COALESCE(sales.saleAmount, 0) as saleAmount
    FROM (
        SELECT 
            link_id,
            formatDateTime(interval, '%FT%T.000%z') as start,
            clicks
        FROM link_timeseries_clicks_data
    ) AS clicks
    FULL OUTER JOIN (
        SELECT 
            link_id,
            formatDateTime(interval, '%FT%T.000%z') as start,
            leads
        FROM link_timeseries_leads_data
    ) AS leads ON clicks.link_id = leads.link_id AND clicks.start = leads.start
    FULL OUTER JOIN (
        SELECT 
            link_id,
            formatDateTime(interval, '%FT%T.000%z') as start,
            sales,
            saleAmount
        FROM link_timeseries_sales_data
    ) AS sales ON COALESCE(clicks.link_id, leads.link_id) = sales.link_id 
                AND COALESCE(clicks.start, leads.start) = sales.start
    ORDER BY link_id, start
